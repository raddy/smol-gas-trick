#include "./utils.huff"
/* Interface */

/* Storage Slots */
#define constant FACTORY       = 0x0000000000001F98431c8aD98523631AE4a59f267346ea31F984
#define constant WETH_OPT      = 0x0000000000004200000000000000000000000000000000000006
#define constant WETH_USDC_OPT = 0x00000000000085149247691df622eaF1a8Bd0CaFd40BC45154a9

// Swap(uint amount0Out, uint amount1Out, address to, bytes data)
#define constant V2_SWAP_SIG = 0x022c0d9f00000000000000000000000000000000000000000000000000000000
// Swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data)
#define constant V3_SWAP_SIG = 0x128acb0800000000000000000000000000000000000000000000000000000000

#define constant QTY_MASK     = 0x1ff // 0b000000111111111
#define constant TENTH_ETH    = 0x16345785d8a0000 // 0.1 ether

/* Methods */
#define macro GET_QTY() = takes (0) returns (0) {
    // Input Stack: []
     gas                     // [gas]
     [QTY_MASK]              // [mask, gas]
     and                     // [mask & gas]
     [TENTH_ETH]             // [tenth_eth, mask & gas]
     mul                     // [(mask & gas) * tenth_eth]
}

#define macro WRAP_ETH() = takes (0) returns (0) {
    // Input Stack: [amount]
    [WETH_OPT]              // [weth_opt, amount]
    swap1                   // [amount, weth_opt]
    SEND_ETH()              // [success]
}


#define macro UNIV3_SWAP() = takes (0) returns (0) {
    // Input Stac: [address, slippage, amount_deci_weth]

    [V3_SWAP_SIG] 0x00 mstore       // mstore(0, 0x128acb08)
    address 0x04 mstore             // mstore(4, adderss(this))
    0x01 0x24 mstore                // mstore(36, true)
    [TENTH_ETH] mul                 // [address, slippage, amount_wei]
    0x44 mstore                     // mstore(68, amount_wei)
    0x64 mstore                     // mstore(100, minSqrtPriceLimitX96)
}

#define macro MAIN() = takes (0) returns (0) {
    gasprice
    pop
    0x01ff                 // [fake_qty]
    //GET_QTY()              // [qty]
    UNIV3_SWAP()

    
    //WRAP_ETH()             // [success]
    //gasprice dup1


}